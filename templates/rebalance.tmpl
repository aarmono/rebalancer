
<%
from decimal import Decimal
from rebalance import Transaction

portfolio = session.get_portfolio()
rebalancer = session.get_rebalancer()
account_target = session.get_account_target()

targets_by_tax_group = rebalancer.compute_target_asset_values(portfolio, rebalance_mode, account_target.get_asset_sales_mask())
portfolio_transactions = portfolio.get_transactions_to_match_target(targets_by_tax_group)

total_value = portfolio.current_value()
target_values = account_target.get_target_asset_values(portfolio)
target_percentages = account_target.get_target_asset_percentages()

new_portfolio = portfolio.copy_with_transactions_applied(portfolio_transactions)
%>

<!DOCTYPE html>

<html>
<head>
<script src="/js/plotly-latest.min.js"></script>
<style>
table, th, td {
  border: 1px solid black;
  text-align: right;
}

.horiz_content {
  display: flex;
  justify-content: start;
  align-items: center;
  align-content: stretch;
}
.vert_content {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-content: stretch;
  height: 500px;
}
</style>
</head>
<title>Rebalance Results</title>
<body>

<p>
  <a href="/">Go Home</a>
</p>

% from itertools import chain

% transactions_list = list(chain(*chain(*map(lambda x: x.values(), 
%                                            portfolio_transactions.values()))))

% if len(transactions_list) > 0:
    <h1>Transactions</h1>

    <%
    include('templates/transactions.tmpl', transaction_groups=portfolio_transactions)

    include('templates/portfolio.tmpl', portfolio=new_portfolio, title="New Portfolio Composition", n=1)

    for (tax_status, assets) in new_portfolio.assets_by_tax_status().items():
        tax_group_targets = targets_by_tax_group[tax_status]
        include('templates/portfolio.tmpl', portfolio=assets, target_values=None, target_percentages=None, title=tax_status, n=2)
    end
end

include('templates/portfolio.tmpl', portfolio=portfolio, title="Current Portfolio Composition", n=1)

if len(transactions_list) == 0:

    for (tax_status, assets) in portfolio.assets_by_tax_status().items():
        tax_group_targets = targets_by_tax_group[tax_status]
        include('templates/portfolio.tmpl', portfolio=assets, target_values=None, target_percentages=None, title=tax_status, n=2)
    end

end
%>

</body>
</html>