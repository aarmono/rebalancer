
% from rebalancer import to_dollars

% show_pie_chart = getattr(portfolio, 'assets_by_tax_status', None) is not None

% if show_pie_chart:
<div class="horiz_content">
<div id="{{title}}_div" class="vert_content">
% end

<h{{n}}>{{title}}</h{{n}}>

<table>
  <tr>
    <th>Asset</th>
    <th>Actual Percentage</th>
% if show_dollar_values:
    <th>Actual Amount</th>
% end
% if target_percentages is not None:
    <th>Target Percentage</th>
% if show_dollar_values:
    <th>Target Amount</th>
% end
    <th>Percentage Point Difference</th>
    <th>Percent Difference</th>
% end
  </tr>
<%
total_value = portfolio.current_value()
for (symbol, value) in sorted(portfolio.items(), key=lambda x: x[1], reverse=True):
    actual_percent = ((value / total_value) * 100).quantize(Decimal('1.0'))

    target_percent = None
    point_difference = None
    if target_percentages is not None:
        target_percent = (target_percentages[symbol] * 100).quantize(Decimal('1.0'))
        point_difference = actual_percent - target_percent
        if target_percent > Decimal(0.0):
            percent_difference = ((point_difference / target_percent) * 100).quantize(Decimal('1.0'))
        else:
            percent_difference = None
        end
    end
%>
    <tr>
        <td>{{symbol}}</td>
        <td>{{actual_percent}}%</td>
    % if show_dollar_values:
        <td>{{to_dollars(value)}}
    % end
    % if target_percentages is not None:
        <td>{{target_percent}}%</td>
        % if show_dollar_values:
        <td>{{to_dollars(total_value * target_percentages[symbol])}}</td>
        % end
        <td>{{point_difference}}%</td>
        % if percent_difference is not None:
        <td>{{percent_difference}}%</td>
        % else:
        <td></td>
        % end
    % end
    </tr>
% end
</table>

<h{{n+1}}>Group Percentages</h{{n+1}}>
<table>
  <tr>
    <th>Group</th>
    <th>Actual Percentage</th>
% if show_dollar_values:
    <th>Actual Amount</th>
% end
% if target_percentages is not None:
    <th>Target Percentage</th>
    <th>Percentage Point Difference</th>
% end
  </tr>
<%
group_actual_values = portfolio.assets_by_asset_group()
group_target_values = None
group_percentages = None
if target_percentages is not None:
    group_target_values = account_target.get_target_asset_group_values(portfolio)
    group_percentages = account_target.get_target_asset_group_percentages(portfolio)
end

for (group, actual_value) in sorted(group_actual_values.items(), key=lambda x: x[1], reverse=True):
    group_target_percent = None
    target_value = None
    if target_percentages is not None:
        group_target_percent = (group_percentages[group] * 100).quantize(Decimal('1.0'))
        target_value = group_target_values[group]
    end
    group_percent = ((actual_value / total_value) * 100).quantize(Decimal('1.0'))
%>
  <tr>
    <td>{{group}}</td>
    <td>{{group_percent}}</td>
% if show_dollar_values:
    <td>{{to_dollars(actual_value)}}</td>
% end
% if target_percentages is not None:
    <td>{{group_target_percent}}</td>
    <td>{{group_percent - group_target_percent}}</td>
% end
  </tr>
%end
</table>

% if show_pie_chart:
</div>
% include('www/templates/pie_chart.tmpl', portfolio=portfolio, title=title, table_id=title + "_div")
</div>
% end
