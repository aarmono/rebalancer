
<%
from decimal import Decimal

from rebalancer import AssetTaxGroup

asset_ids = {}
tax_groups = []

for (name, _) in database.get_tax_groups():
    tax_groups.append(name)
end

for (asset, id) in database.get_asset_abbreviations():
    asset_ids[asset] = id
end

assets = sorted(account_target.get_asset_targets().keys(),
                key=lambda x: asset_ids[x])
num_assets = len(assets)

%>

<h1>Configure Asset Affinity</h1>

    % for tax_status in tax_groups:

    <h2>{{tax_status}}</h2>

    <table>
        <tr>
            <th>Asset</th>
            <th>Priority</th>
            <th>Disable Selling?</th>
        </tr>
        <%
        affinities = account_target.get_tax_group_asset_affinity(tax_status)
        affinity_map = {}

        for i in range(0, len(affinities)):
            affinity_map[affinities[i]] = i + 1
        end

        for asset in assets:
            cur_value = "DISABLE"
            if asset in affinity_map:
                cur_value = affinity_map[asset]
            end

            values = [(i, i) for i in range(1, num_assets + 1)]
            values.append(("DISABLE", "Disable"))

            asset_tax_group = AssetTaxGroup(asset, tax_status)
        %>
        <tr>
            <td>{{asset}}</td>
            <td>
                <select name="affinity/{{tax_status}}|{{asset}}">
                % for (value, text) in values:
                    <option value="{{value}}" {{!'selected="selected"' if value == cur_value else ''}}>{{text}}</option>
                %end
                </select>
            </td>
            <td><input type = "checkbox" name="mask/{{tax_status}}|{{asset}}" value="true" {{'checked' if asset_tax_group in asset_sales_mask else ''}} /></td>
        </tr>

        % end
    </table>

    % end
